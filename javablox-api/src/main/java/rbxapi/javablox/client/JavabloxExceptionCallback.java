package rbxapi.javablox.client;

import rbxapi.javablox.data.JavabloxException;

/**
 * This interface provides methods for handling exceptions generated by Roblox endpoint.<br>
 * You can make an abstract class which implements this interface, declares implementation for these errors<br>
 * Then gives each Javablox call a concrete class that also implements onSuccess and onError by `JavabloxResponseCallback`.
 */
public interface JavabloxExceptionCallback {

    /**
     * Access denied, in most cases this means not logged in.
     * @param ex Exception
     */
    void onAccessDenied(JavabloxException ex);

    /**
     * Roblox database doesn't have this user. Usually a mistyped user ID.
     * @param ex Exception
     */
    void onUserNotFound(JavabloxException ex);

    /**
     * Invalid request body, this is means the parameters being used in the call is not the same type as the one specified in the endpoint.
     * @param ex Exception
     */
    void onInvalidRequestBody(JavabloxException ex);

    /**
     * Remote endpoint throws unknown error.
     * @param ex Exception
     */
    void onUnknownError(JavabloxException ex);

    /**
     * Pin Locked.
     * @param ex Exception
     */
    void onPinLocked(JavabloxException ex);

    /**
     * The endpoint was disabled
     * @param ex Exception
     */
    void onFeatureDisabled(JavabloxException ex);

    /**
     * The authenticated account isn't conneted to a Xbox Live account. Basically the account isn't created in Xbox console.
     * @param ex Exception
     */
    void onNotXboxLiveAccount(JavabloxException ex);
}
