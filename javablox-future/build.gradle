plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

version '1.0-SNAPSHOT'
ext.moduleName = 'rbxapi.javablox.future'

dependencies {
    api project(':javablox-api')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'javablox-future'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Javablox Future'
                description = "Implementation of Javablox that uses Java's built-in Future"
                url = 'https://github.com/rbxapi/javablox'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/RbxAPI/Javablox/blob/master/LICENSE.md'
                    }
                }
                developers {
                    developer {
                        id = 'ChingDim'
                        name = 'ChingDim'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/RbxAPI/Javablox.git'
                    developerConnection = 'scm:git:ssh://github.com/RbxAPI/Javablox.git'
                    url = 'http://github.com/RbxAPI/Javablox/'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username "$mavenUser"
                password "$mavenPassword"
            }
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

// Don't add wrapper because it is included in Javablox
